<?xml version="1.0" encoding="utf-8"?>
<android.support.design.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <android.support.design.widget.AppBarLayout
        android:id="@+id/collapsing_toolbar_appBar"
        android:layout_width="match_parent"
        android:layout_height="200dp">

        <!--app:contentScrim 用于指定 CollapsingToolbarLayout 在趋于折叠状态以及折叠之后的背景色，-->
        <!--其实 CollapsingToolbarLayout 在折叠之后就是一个普通的的Toolbar-->
        <!--layout_scrollFlags-->
        <!--scroll 表示 CollapsingToolbarLayout会随着内容详情的滚动一起滚动，-->
        <!--exitUntilCollapsed 表示当 CollapsingToolbarLayout 随着滚动完成折叠之后就保留在界面上，不在移出屏幕。-->
        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/collapsing_toolbar_collapsingToolbar"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
            app:contentScrim="?attr/colorPrimary"
            app:layout_scrollFlags="scroll|exitUntilCollapsed">

            <!--app:layout_collapseMode 它用于指定房钱控件在 CollapsingToolbarLayout 折叠过程中的折叠模式，-->
            <!--其中 Toolbar 指定成 pin，表示在折叠的过程中位置始终保持不变-->
            <!--其中 ImageView 指定成 parallax，表示会在折叠的过程中产生一定的错位偏移，这种模式的视觉效果会非常好-->
            <ImageView
                android:id="@+id/collapsing_toolbar_image"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:scaleType="centerCrop"
                android:src="@drawable/my_test_bg"
                app:layout_collapseMode="parallax" />

            <android.support.v7.widget.Toolbar
                android:id="@+id/collapsing_toolbar_toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin" />

        </android.support.design.widget.CollapsingToolbarLayout>
    </android.support.design.widget.AppBarLayout>

    <!--app:layout_behavior 用于指定布局行为  @string/appbar_scrolling_view_behavior 这个字符串也是由 Design Support 库提供的-->
    <android.support.v4.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

            <android.support.v7.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginBottom="15dp"
                android:layout_marginLeft="15dp"
                android:layout_marginRight="15dp"
                android:layout_marginTop="30dp"
                app:cardCornerRadius="5dp">

                <TextView
                    android:id="@+id/collapsing_toolbar_content_text"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_margin="15dp"
                    android:text="我是卡片的内容" />
            </android.support.v7.widget.CardView>
        </LinearLayout>
    </android.support.v4.widget.NestedScrollView>

    <!--app:layout_anchor 属性指定了一个锚点，我们将锚点设置为 APPBarLayout，这样悬浮按钮就会出现在标题栏的区域内，接着有使用-->
    <!--app:layout_anchorGravity 属性将悬浮按钮定位在标题栏区域的右下角。-->
    <android.support.design.widget.FloatingActionButton
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="15dp"
        android:src="@drawable/mytouxiang"
        app:layout_anchor="@id/collapsing_toolbar_appBar"
        app:layout_anchorGravity="bottom|end" />
</android.support.design.widget.CoordinatorLayout>
